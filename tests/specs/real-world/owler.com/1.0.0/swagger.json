{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "api.owler.com",
    "x-providerName": "owler.com",
    "x-origin": {
      "format": "swagger",
      "version": "1.2",
      "url": "https://developers.owler.com/swagger/spec.json"
    }
  },
  "paths": {
    "/v1/company/basicsearch": {
      "get": {
        "responses": {
          "200": {
            "description": "Search Results",
            "schema": {
              "$ref": "#/definitions/basic_results"
            }
          },
          "400": {
            "description": "Invalid Parameters"
          },
          "403": {
            "description": "Authentication Failed"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "description": "",
        "tags": [
          "v1/company"
        ],
        "summary": "Basic Search Company by Ticker or Website or Name",
        "operationId": "basicCompanySearch",
        "parameters": [
          {
            "in": "query",
            "description": "Search term",
            "name": "q",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "description": "Fields to be searched - name, website, ticker. If not specfied, will be searched against all fields",
            "name": "fields",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "description": "Number of results to be displayed - 10 (by default, if not specified) to 30",
            "name": "limit",
            "required": false,
            "type": "string",
            "maximum": 30,
            "minimum": 1
          },
          {
            "in": "query",
            "description": "Format of the response content - json (by default if not specified), xml",
            "name": "format",
            "required": false,
            "type": "string",
            "default": "json"
          },
          {
            "in": "header",
            "description": "API Access Key",
            "name": "user_key",
            "required": true,
            "type": "string"
          }
        ]
      }
    },
    "/v1/company/search": {
      "get": {
        "responses": {
          "200": {
            "description": "Search Results",
            "schema": {
              "$ref": "#/definitions/results"
            }
          },
          "400": {
            "description": "Invalid Parameters"
          },
          "403": {
            "description": "Authentication Failed"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "description": "",
        "tags": [
          "v1/company"
        ],
        "summary": "Search Company by Ticker or Website or Name",
        "operationId": "searchCompany",
        "parameters": [
          {
            "in": "query",
            "description": "Search term",
            "name": "q",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "description": "Fields to be searched - name, website, ticker. If not specified, will be searched against all fields",
            "name": "fields",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "description": "Number of results to be displayed - 10 (by default, if not specified) to 30",
            "name": "limit",
            "required": false,
            "type": "string",
            "maximum": 30,
            "minimum": 1
          },
          {
            "in": "query",
            "description": "Format of the response content - json (by default if not specified), xml",
            "name": "format",
            "required": false,
            "type": "string",
            "default": "json"
          },
          {
            "in": "header",
            "description": "API Access Key",
            "name": "user_key",
            "required": true,
            "type": "string"
          }
        ]
      }
    },
    "/v1/company/id/{companyId}": {
      "get": {
        "responses": {
          "200": {
            "description": "Company Data",
            "schema": {
              "$ref": "#/definitions/company"
            }
          },
          "400": {
            "description": "Invalid Parameters"
          },
          "403": {
            "description": "Authentication Failed"
          },
          "404": {
            "description": "Resource Not Found"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "description": "",
        "tags": [
          "v1/company"
        ],
        "summary": "Get Company by Id",
        "operationId": "getCompanyById",
        "parameters": [
          {
            "in": "path",
            "description": "Company Id",
            "name": "companyId",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "description": "Format of the response content - json (by default if not specified), xml",
            "name": "format",
            "required": false,
            "type": "string",
            "default": "json"
          },
          {
            "in": "header",
            "description": "API Access Key",
            "name": "user_key",
            "required": true,
            "type": "string"
          }
        ]
      }
    },
    "/v1/company/url/{website}": {
      "get": {
        "responses": {
          "200": {
            "description": "Company Data",
            "schema": {
              "$ref": "#/definitions/company"
            }
          },
          "400": {
            "description": "Invalid Parameters"
          },
          "403": {
            "description": "Authentication Failed"
          },
          "404": {
            "description": "Resource Not Found"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "description": "",
        "tags": [
          "v1/company"
        ],
        "summary": "Get Company by URL",
        "operationId": "getCompanyByWebsite",
        "parameters": [
          {
            "in": "path",
            "description": "Company Domain",
            "name": "website",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "description": "Format of the response content - json (by default if not specified), xml",
            "name": "format",
            "required": false,
            "type": "string",
            "default": "json"
          },
          {
            "in": "header",
            "description": "API Access Key",
            "name": "user_key",
            "required": true,
            "type": "string"
          }
        ]
      }
    },
    "/v1/company/competitor/id/{companyId}": {
      "get": {
        "responses": {
          "200": {
            "description": "Competitors Data",
            "schema": {
              "$ref": "#/definitions/CompanyCompetitorVO"
            }
          },
          "400": {
            "description": "Invalid Parameters"
          },
          "403": {
            "description": "Authentication Failed"
          },
          "404": {
            "description": "Resource Not Found"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "description": "",
        "tags": [
          "competitor"
        ],
        "summary": "Get Competitor information by Id",
        "operationId": "getCompetitorsForId",
        "parameters": [
          {
            "in": "path",
            "description": "Company Id",
            "name": "companyId",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "description": "Format of the response content - json (by default if not specified), xml",
            "name": "format",
            "required": false,
            "type": "string",
            "default": "json"
          },
          {
            "in": "header",
            "description": "API Access Key",
            "name": "user_key",
            "required": true,
            "type": "string"
          }
        ]
      }
    },
    "/v1/company/competitor/url/{website}": {
      "get": {
        "responses": {
          "200": {
            "description": "Competitors Data",
            "schema": {
              "$ref": "#/definitions/CompanyCompetitorVO"
            }
          },
          "400": {
            "description": "Invalid Parameters"
          },
          "403": {
            "description": "Authentication Failed"
          },
          "404": {
            "description": "Resource Not Found"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "description": "",
        "tags": [
          "competitor"
        ],
        "summary": "Get Competitor information by URL",
        "operationId": "getCompetitorsForWebsite",
        "parameters": [
          {
            "in": "path",
            "description": "Company Id",
            "name": "website",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "description": "Format of the response content - json (by default if not specified), xml",
            "name": "format",
            "required": false,
            "type": "string",
            "default": "json"
          },
          {
            "in": "header",
            "description": "API Access Key",
            "name": "user_key",
            "required": true,
            "type": "string"
          }
        ]
      }
    },
    "/v1/feed": {
      "get": {
        "responses": {
          "200": {
            "description": "Feeds Data",
            "schema": {
              "$ref": "#/definitions/results"
            }
          },
          "400": {
            "description": "Invalid Parameters"
          },
          "403": {
            "description": "Authentication Failed"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "description": "",
        "tags": [
          "v1/feed"
        ],
        "summary": "Get Feeds for given Company Ids",
        "operationId": "getFeeds",
        "parameters": [
          {
            "in": "query",
            "description": "Format of the response content - json (by default if not specified), xml",
            "name": "format",
            "required": false,
            "type": "string",
            "default": "json"
          },
          {
            "in": "query",
            "description": "Company Ids separated by comma (Maximum of 10 Company Ids)",
            "name": "company_id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "description": "Number of results to be displayed - 10 (by default, if not specified) to 100",
            "name": "limit",
            "required": false,
            "type": "string",
            "default": "10"
          },
          {
            "in": "query",
            "description": "Pass pagination_id as blank in the first API request. The API response will return the latest feeds along with the next pagination_id which can be passed in the subsequent API request to get the next set of feeds. Repeat this process until needed or till the pagination_id returned is blank",
            "name": "pagination_id",
            "required": false,
            "type": "string",
            "default": "*"
          },
          {
            "in": "query",
            "description": "Categories separated by comma. If not specified, will search against all categories",
            "name": "category",
            "required": false,
            "type": "string",
            "default": "NEWS,PRESS,FUNDING,ACQUISITION,PEOPLE,BLOG,VIDEOS"
          },
          {
            "in": "header",
            "description": "API Access Key",
            "name": "user_key",
            "required": true,
            "type": "string"
          }
        ]
      }
    }
  },
  "host": "api.owler.com",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "tags": [
    {
      "name": "swagger/spec/CompanyAPI",
      "description": "Provides Company information"
    },
    {
      "name": "swagger/spec/CompetitorAPI",
      "description": "Provides Competitor information"
    },
    {
      "name": "swagger/spec/FeedAPI",
      "description": "Provides Feed information"
    }
  ],
  "definitions": {
    "CompanyBasicSearchVO": {
      "description": "",
      "properties": {
        "company_id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "short_name": {
          "type": "string"
        },
        "website": {
          "type": "string"
        },
        "profile_url": {
          "type": "string"
        },
        "hq_address": {
          "$ref": "#/definitions/Address"
        }
      }
    },
    "Address": {
      "properties": {
        "street1": {
          "type": "string"
        },
        "street2": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "postal_code": {
          "type": "string"
        }
      }
    },
    "company": {
      "description": "",
      "required": [
        "company_id",
        "name",
        "website",
        "logo_url",
        "profile_url"
      ],
      "properties": {
        "company_id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "short_name": {
          "type": "string"
        },
        "website": {
          "type": "string"
        },
        "logo_url": {
          "type": "string"
        },
        "profile_url": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "company_type": {
          "type": "string",
          "enum": [
            "Private",
            "Public",
            "Product/Brand/Service",
            "NGO/NPO/NFP/Organization/Association",
            "Investment Company",
            "Government"
          ]
        },
        "stock": {
          "$ref": "#/definitions/Stock"
        },
        "hq_address": {
          "$ref": "#/definitions/Address"
        },
        "founded_date": {
          "type": "string"
        },
        "revenue": {
          "type": "string"
        },
        "employee_count": {
          "type": "string"
        },
        "industry": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ceo": {
          "$ref": "#/definitions/Ceo"
        }
      }
    },
    "Ceo": {
      "properties": {
        "first_name": {
          "type": "string"
        },
        "last_name": {
          "type": "string"
        },
        "image_url": {
          "type": "string"
        }
      }
    },
    "results": {
      "description": "",
      "properties": {
        "feed": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FeedsVO"
          }
        },
        "pagination_id": {
          "type": "string"
        }
      }
    },
    "basic_results": {
      "description": "",
      "properties": {
        "company": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CompanyBasicSearchVO"
          }
        }
      }
    },
    "CompanySearchResultVO": {
      "description": "",
      "required": [
        "company_id",
        "name",
        "website",
        "logo_url",
        "profile_url"
      ],
      "properties": {
        "company_id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "short_name": {
          "type": "string"
        },
        "website": {
          "type": "string"
        },
        "logo_url": {
          "type": "string"
        },
        "profile_url": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "company_type": {
          "type": "string",
          "enum": [
            "Private",
            "Public",
            "Product/Brand/Service",
            "NGO/NPO/NFP/Organization/Association",
            "Investment Company",
            "Government"
          ]
        },
        "stock": {
          "$ref": "#/definitions/Stock"
        },
        "hq_address": {
          "$ref": "#/definitions/Address"
        }
      }
    },
    "Stock": {
      "properties": {
        "ticker": {
          "type": "string"
        },
        "exchange": {
          "type": "string"
        }
      }
    },
    "CompanyBasicVO": {
      "description": "",
      "required": [
        "company_id",
        "name",
        "website",
        "logo_url",
        "profile_url"
      ],
      "properties": {
        "company_id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "short_name": {
          "type": "string"
        },
        "website": {
          "type": "string"
        },
        "logo_url": {
          "type": "string"
        },
        "profile_url": {
          "type": "string"
        }
      }
    },
    "CompanyCompetitorVO": {
      "properties": {
        "competitor": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CompanyBasicVO"
          }
        }
      }
    },
    "FeedsVO": {
      "description": "",
      "properties": {
        "id": {
          "type": "string"
        },
        "category": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "publisher_name": {
          "type": "string"
        },
        "publisher_logo": {
          "type": "string"
        },
        "source_url": {
          "type": "string"
        },
        "enclosure_image": {
          "type": "string"
        },
        "feed_date": {
          "type": "string"
        },
        "owler_feed_url": {
          "type": "string"
        },
        "company": {
          "$ref": "#/definitions/CompanyBasicVO"
        }
      }
    }
  }
}